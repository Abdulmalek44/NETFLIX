import React, { useEffect, useState } from 'react'
import { MdChevronLeft, MdChevronRight } from 'react-icons/md';
import { UserAuth } from '../Context/AuthContext';
import { db } from '../Firebase';
import { doc, updateDoc, onSnapshot } from 'firebase/firestore'
import AccountMovie from './AccountMovie';

const SaveShows = () => {
    //States
    const [movies, setMovies] = useState([]);
    const { user } = UserAuth()
    const movieRef = doc(db, 'users', `${user?.email}`);

    //Functons 
    const slideLeft = () => {
        var slider = document.getElementById('slider')
        slider.scrollLeft = slider.scrollLeft - 500;
    };
    const slideRight = () => {
        var slider = document.getElementById('slider');
        slider.scrollLeft = slider.scrollLeft + 500;
    };
    const deleteShow = async (Id) => {
        try {
            const result = movies.filter(item => item.id !== Id)
            await updateDoc(movieRef, {
                savedShows: result,
            })
        }
        catch (error) {
            console.log(error)
        }
    }

    useEffect(() => {
        onSnapshot(doc(db, 'users', `${user?.email}`), (doc) => {
            setMovies(doc.data()?.savedShows);
        });
    }, [user?.email]);

    return (
        <div className=' w-full h-auto text-white ' >
            <div className='relative flex items-center group mt-5'>
                <MdChevronLeft
                    onClick={slideLeft}
                    size={40}
                    className='hidden bg-white text-black rounded-full opacity-60 hover:opacity-100 duration-300 
                left-2 absolute z-10 cursor-pointer group-hover:block '
                />
                <div
                    id={'slider'}
                    className='w-full h-full overflow-x-scroll whitespace-nowrap scroll-smooth scrollbar-hide  relative 
                 '>
                    {
                        movies.map((item, id) => <AccountMovie
                            key={id}
                            movie={item}
                            deleteShow={deleteShow}
                        />)
                    }
                </div>
                <MdChevronRight
                    onClick={slideRight}
                    size={40}
                    className='hidden bg-white text-black rounded-full opacity-60 hover:opacity-100 duration-300
                 right-2 absolute z-10 cursor-pointer  group-hover:block  '
                />
            </div>
        </div>
    )
}

export default SaveShows